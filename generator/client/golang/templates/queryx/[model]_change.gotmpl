// Code generated by queryx, DO NOT EDIT.

package queryx

type {{ $.model.Name }}Change struct {
	{{- range $c := .model.Columns }}
	{{ $c.Name | pascal }} {{ goType $c.Type $c.Array }}
	{{- end }}
}

func (c *{{.model.Name}}Change) Changes() (columns []string, values []interface{}) {
	if c == nil {
		return columns, values
	}

	{{- range $c := .model.Columns }}
	{{- $f := $c.Name | pascal }}
	if c.{{ $f }}.Set {
		columns = append(columns, "{{ $c.Name }}")
		values = append(values, c.{{ $f }})
	}
	{{- end }}
	return columns, values
}

{{- range $c := $.model.Columns }}
{{- $f := $c.Name | pascal }}
{{- $t := goChangeSetType  $c.Type $c.Array }}
{{- $a := $c.Name | camel | goKeywordFix }}

func (c *{{ $.model.Name }}Change) Set{{ pascal $c.Name }}({{ $a }} {{ $t }}) *{{ $.model.Name }}Change {
	c.{{ $f }} = New{{ goType $c.Type $c.Array }}({{ $a }})
	c.{{ $f }}.Set = true
	return c
}
{{- if $c.Null }}

func (c *{{ $.model.Name }}Change) SetNullable{{ pascal $c.Name }}({{ $a }} *{{ $t }}) *{{ $.model.Name }}Change {
	c.{{ $f }} = NewNullable{{ goType $c.Type $c.Array }}({{ $a }})
	c.{{ $f }}.Set = true
	return c
}
{{- end }}
{{- end -}}
