// Code generated by queryx, DO NOT EDIT.

package queryx

type Schema struct {
	{{- range $m := $.client.Models }}
		{{ $m.Name }} *Table
		{{- range .Columns }}
		{{ $m.Name }}{{ firstWordUpperCamel .Name }} *{{goType .Type}}Column
		{{- end}}
	{{- end}}
}

func NewSchema() *Schema {
	{{- range $m := $.client.Models }}
		{{ camel $m.Name }} := NewTable("{{ $m.TableName }}")
	{{- end}}

	return &Schema{
	{{- range $m := $.client.Models }}
		{{ $m.Name }}: {{ camel $m.Name }},
		{{- range $c := $m.Columns }}
			{{ $m.Name }}{{ firstWordUpperCamel $c.Name }}: {{ camel $m.Name }}.New{{ goType $c.Type }}Column("{{ $c.Name }}"),
		{{- end }}
	{{- end }}
	}
}

func (s *Schema) And(clauses ...*Clause) *Clause {
	return clauses[0].And(clauses[1:]...)
}

func (s *Schema) Or(clauses ...*Clause) *Clause {
	return clauses[0].Or(clauses[1:]...)
}

{{- range $m := $.client.Models }}

func (s *Schema) Change{{ $m.Name }}() *{{ $m.Name }}Change {
	return &{{ $m.Name }}Change{
	{{- range $c := $m.Columns }}
		{{- $f := $c.Name | pascal }}
		{{ $f }}: {{ goType $c.Type }}{},
	{{- end }}
	}
}
{{- end }}
