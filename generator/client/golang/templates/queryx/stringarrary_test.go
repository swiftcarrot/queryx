// Code generated by queryx, DO NOT EDIT.

package queryx

import (
	"encoding/json"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestNewStringArray(t *testing.T) {
	f1 := NewStringArray([]string{"tag1", "tag2"})
	require.Equal(t, []string{"tag1", "tag2"}, f1.Val)
	require.True(t, f1.Valid)

	f2 := NewNullableStringArray(nil)
	require.False(t, f2.Valid)
}

func TestStringArrayJSON(t *testing.T) {
	type Foo struct {
		X StringArray `json:"x"`
		Y StringArray `json:"y"`
	}
	x := NewStringArray([]string{"tag1", "tag2"})
	y := NewNullableStringArray(nil)
	s := `{"x":{"Val":["tag1","tag2"],"Valid":true,"Set":true},"y":{"Val":null,"Valid":false,"Set":true}}`

	f1 := Foo{X: x, Y: y}
	b, err := json.Marshal(f1)
	require.NoError(t, err)
	require.Equal(t, s, string(b))

	var f2 Foo
	err = json.Unmarshal([]byte(s), &f2)
	require.NoError(t, err)
	require.Equal(t, x, f2.X)
	require.Equal(t, y, f2.Y)
}
